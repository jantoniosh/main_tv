{"version":3,"sources":["pages/Demonio.js","pages/Inicio.js","pages/Intro.js","pages/Ojos.js","pages/Robot.js","pages/Toni.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["Demonio","useState","estado","texto","state","setstate","className","id","onClick","cmd","Axios","post","then","res","console","log","data","catch","err","Inicio","Intro","useEffect","Ojos","a","b","rangos","setRangos","send_data","type","name","min","max","value","onChange","e","target","Robot","slider","toString","Toni","numero","setNumero","key","val","valA","setValA","valB","setValB","map","d","valores_A","i","length","cambio_A","valores_B","cambio_B","Main","menu","link","process","LMenu","basename","me","exact","to","activeClassName","formato","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2f72c488.chunk.js","sourcesContent":["import Axios from 'axios';\r\nimport React, { useState } from 'react'\r\n\r\nconst Demonio = () => {\r\n    const [state, setstate] = useState({\r\n        estado: false,\r\n        texto: \"NO\"\r\n    });\r\n\r\n    const onCambio = () => {\r\n        let cmd = \"\";\r\n        if (state.estado) {\r\n            setstate({\r\n                estado: false,\r\n                texto: \"NO\"\r\n            });\r\n            cmd = \"c@0\";\r\n        }\r\n        else {\r\n            setstate({\r\n                estado: true,\r\n                texto: \"SI\"\r\n            });\r\n            cmd = \"c@1\";\r\n        }\r\n        Axios.post('https://cacomixtle.net/cmd', { cmd: cmd })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"texto_inicio\">\r\n                <p>SI/NO</p>\r\n            </div>\r\n            <div id=\"si_no\" className={state.estado ? `active_si_no` : `inactive_si_no`} onClick={onCambio}>{state.texto}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Demonio\r\n","import React from 'react';\r\n\r\nconst Inicio = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"texto_inicio\">\r\n                <p>\r\n                    TV es una pieza interactiva realizada por Antonio Salinas con motivo de su cumpleaños número 28, su relación generada por la pandemia del año 2020 y su estancia en Pachuca.\r\n                    </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Inicio\r\n","import Axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\n\r\nconst Intro = () => {\r\n    \r\n    useEffect(() => {\r\n        Axios.post('https://cacomixtle.net/cmd', { cmd: 'a' })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"texto_inicio\">\r\n                <p>\r\n                    Usted Disfrute, casi todo se puede controlar aquí y lo verá en la TV, menos esta sección =P.\r\n                </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Intro\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios';\r\nimport '../css/Sliders.scss';\r\n\r\nconst Ojos = () => {\r\n    const [rangos, setRangos] = useState({\r\n        a: 20,\r\n        b: 80,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const send_data = async () => {\r\n            try {\r\n                let cmd = `b@${rangos.a}@${rangos.b}`;\r\n                await Axios.post('https://cacomixtle.net/cmd', { cmd: cmd })\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                    });\r\n                console.log(\"ok\");\r\n            }\r\n            catch {\r\n                console.log(\"error\");\r\n            }\r\n        }\r\n        send_data();\r\n    }, [rangos]);\r\n\r\n    const onChangeValue_a = (e) => {\r\n        setRangos({ ...rangos, a: e.target.value });\r\n    }\r\n\r\n    const onChangeValue_b = (e) => {\r\n        setRangos({ ...rangos, b: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"texto_inicio\">\r\n                <p>Menor</p>\r\n            </div>\r\n            <div className=\"sliders\">\r\n                <input type=\"range\" name=\"a\" min=\"1\" max=\"120\" value={rangos.a} onChange={onChangeValue_a}></input>\r\n            </div>\r\n            <div className=\"texto_inicio\">\r\n                <p>Mayor</p>\r\n            </div>\r\n            <div className=\"sliders\">\r\n                <input type=\"range\" name=\"b\" min=\"1\" max=\"120\" value={rangos.b} onChange={onChangeValue_b}></input>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ojos\r\n","import Axios from 'axios';\r\nimport React, { useState } from 'react'\r\n\r\nconst Robot = () => {\r\n    const [state, setstate] = useState(40);\r\n\r\n    const onChangeValue = (e) => {\r\n        console.log(81 - e.target.value);\r\n        let slider = 81 - e.target.value;\r\n        let cmd = 'd@' + slider.toString();\r\n        console.log(slider);\r\n        console.log(cmd);\r\n        setstate(e.target.value);\r\n        Axios.post('https://cacomixtle.net/cmd', { cmd: cmd })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"texto_inicio\">\r\n                <p>\r\n                    Frecuencia\r\n                </p>\r\n            </div>\r\n            <div className=\"sliders\">\r\n                <input type=\"range\" name=\"freq\" min=\"1\" max=\"80\" value={state} onChange={onChangeValue}></input>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Robot\r\n","import Axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst Toni = () => {\r\n    const [numero, setNumero] = useState({\r\n        a: 1,\r\n        b: 2,\r\n    });\r\n\r\n    const [valA, setValA] = useState([\r\n        {\r\n            key: 1,\r\n            val: true\r\n        },\r\n        {\r\n            key: 2,\r\n            val: false\r\n        },\r\n        {\r\n            key: 3,\r\n            val: false\r\n        },\r\n        {\r\n            key: 4,\r\n            val: false\r\n        },\r\n        {\r\n            key: 5,\r\n            val: false\r\n        },\r\n        {\r\n            key: 6,\r\n            val: false\r\n        }\r\n    ]);\r\n\r\n    const [valB, setValB] = useState([\r\n        {\r\n            key: 1,\r\n            val: false\r\n        },\r\n        {\r\n            key: 2,\r\n            val: true\r\n        },\r\n        {\r\n            key: 3,\r\n            val: false\r\n        },\r\n        {\r\n            key: 4,\r\n            val: false\r\n        },\r\n        {\r\n            key: 5,\r\n            val: false\r\n        },\r\n        {\r\n            key: 6,\r\n            val: false\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const send_data = async () => {\r\n            try {\r\n                let cmd = `e@${numero.a - 1}@${numero.b - 1}`;\r\n                await Axios.post('https://cacomixtle.net/cmd', { cmd: cmd })\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                    });\r\n                console.log(\"ok\");\r\n            }\r\n            catch {\r\n                console.log(\"error\");\r\n            }\r\n        }\r\n        send_data();\r\n    }, [numero]);\r\n\r\n    const onChangeValue_a = (e) => {\r\n        setNumero({ ...numero, a: e.target.value });\r\n    }\r\n\r\n    const onChangeValue_b = (e) => {\r\n        setNumero({ ...numero, b: e.target.value });\r\n    }\r\n\r\n    const cambio_A = (id) => {\r\n        let valores_A = [...valA];\r\n        for (let i = 0; i < valores_A.length; i++) {\r\n            if (i === (id - 1)) {\r\n                valores_A[i] ={\r\n                    key: i + 1,\r\n                    val: true\r\n                }\r\n            }\r\n            else {\r\n                valores_A[i] ={\r\n                    key: i + 1,\r\n                    val: false\r\n                }\r\n            }\r\n        }\r\n        setValA(valores_A);\r\n        setNumero({ ...numero, a: id });\r\n    }\r\n\r\n    const cambio_B = (id) => {\r\n        let valores_B = [...valB];\r\n        for (let i = 0; i < valores_B.length; i++) {\r\n            if (i === (id - 1)) {\r\n                valores_B[i] ={\r\n                    key: i + 1,\r\n                    val: true\r\n                }\r\n            }\r\n            else {\r\n                valores_B[i] ={\r\n                    key: i + 1,\r\n                    val: false\r\n                }\r\n            }\r\n        }\r\n        setValB(valores_B);\r\n        setNumero({ ...numero, b: id });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"texto_inicio\">\r\n                <p>A</p>\r\n            </div>\r\n            <div className=\"botones_linea\">\r\n                {\r\n                    valA.map((d) => {\r\n                        return (\r\n                            <div className={d.val ? `m_cuad m_cuad_selected` : `m_cuad m_cuad_nrmal`} key={d.key} onClick={() => cambio_A(d.key)}></div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            {/* <input type=\"number\" name=\"a\" min=\"1\" max=\"6\" value={numero.a} onChange={onChangeValue_a}></input> */}\r\n            <div className=\"texto_inicio\">\r\n                <p>B</p>\r\n            </div>\r\n            <div className=\"botones_linea\">\r\n                {\r\n                    valB.map((d) => {\r\n                        return (\r\n                            <div className={d.val ? `m_cuad m_cuad_selected` : `m_cuad m_cuad_nrmal`} key={d.key} onClick={() => cambio_B(d.key)}></div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            {/* <input type=\"number\" name=\"b\" min=\"1\" max=\"6\" value={numero.b} onChange={onChangeValue_b}></input>S */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Toni\r\n","import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Demonio from './Demonio';\r\nimport Inicio from './Inicio';\r\nimport Intro from './Intro';\r\nimport Ojos from './Ojos';\r\nimport Robot from './Robot';\r\nimport Toni from './Toni';\r\n\r\nconst Main = () => {\r\n    const [LMenu] = useState([\r\n        {\r\n            key: 1,\r\n            texto: \"Ch 1: Intro\",\r\n            menu: \"A\",\r\n            link: `${process.env.PUBLIC_URL}/intro`\r\n        },\r\n        {\r\n            key: 2,\r\n            texto: \"Ch 2: Ojos\",\r\n            menu: \"B\",\r\n            link: `${process.env.PUBLIC_URL}/ojos`\r\n        },\r\n        {\r\n            key: 3,\r\n            texto: \"Ch 3: Demonio\",\r\n            menu: \"C\",\r\n            link: `${process.env.PUBLIC_URL}/demonio`\r\n        },\r\n        {\r\n            key: 4,\r\n            texto: \"Ch 4: Robot\",\r\n            menu: \"D\",\r\n            link: `${process.env.PUBLIC_URL}/robot`\r\n        },\r\n        {\r\n            key: 5,\r\n            texto: \"Ch 5: Toñi\",\r\n            menu: \"E\",\r\n            link: `${process.env.PUBLIC_URL}/toni`\r\n        }\r\n    ]);\r\n    return (\r\n        <>\r\n            <Router basename={'/tv'}>\r\n                <div id=\"container\">\r\n                    <div className=\"info\">\r\n                        <div className=\"titulo\">\r\n                            TV\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"menu\" id=\"menu_1\">\r\n                        <ul>\r\n                            {\r\n                                LMenu.map((me) => {\r\n                                    return (\r\n                                        <NavLink exact to={me.link} key={me.key} activeClassName=\"select_color\">\r\n                                            <li className={me.formato}>\r\n                                                {me.texto}\r\n                                            </li>\r\n                                        </NavLink>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"contenido\">\r\n                        <Switch>\r\n                            <Route path={`${process.env.PUBLIC_URL}/`} exact>\r\n                                <Inicio />\r\n                            </Route>\r\n                            <Route path={`${process.env.PUBLIC_URL}/intro`} exact>\r\n                                <Intro />\r\n                            </Route>\r\n                            <Route path={`${process.env.PUBLIC_URL}/ojos`} exact>\r\n                                <Ojos />\r\n                            </Route>\r\n                            <Route path={`${process.env.PUBLIC_URL}/demonio`} exact>\r\n                                <Demonio />\r\n                            </Route>\r\n                            <Route path={`${process.env.PUBLIC_URL}/robot`} exact>\r\n                                <Robot />\r\n                            </Route>\r\n                            <Route path={`${process.env.PUBLIC_URL}/toni`} exact>\r\n                                <Toni />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport Main from './pages/Main';\n\nfunction App() {\n    return (\n        <>\n            <Main />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}